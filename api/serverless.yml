service: monetized-api
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: '20201221'
  iam:
    role:
      name: monetized-api-dynamodb
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - !GetAtt usersTable.Arn
            - !Sub '${usersTable.Arn}/index/*'

functions:
  testGet:
    handler: endpoints/test/testGet.handler
    events:
      - http:
          path: /testGet
          method: GET
          cors: true
  testDynamo:
    handler: endpoints/test/testDynamo.handler
    events:
      - http:
          path: /testDynamo
          method: POST
          cors: true
  testApiKey:
    handler: endpoints/test/genApiKey.handler
    events:
      - http:
          path: /genApiKey
          method: GET
          cors: true

  checkout:
    handler: endpoints/checkout.handler
    events:
      - http:
          path: /checkout
          method: POST
          cors: true
  webhook:
    handler: endpoints/webhook.handler
    events:
      - http:
          path: /webhook
          method: POST
          cors: true
  apiKey:
    handler: endpoints/apiKey.handler
    events:
      - http:
          path: /apiKey
          method: GET
          cors: true
  monetized:
    handler: endpoints/monetized.handler
    events:
      - http:
          path: /monetized
          method: GET
          cors: true
  usage:
    handler: endpoints/usage.handler
    events:
      - http:
          path: /usage
          method: GET
          cors: true

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: usersTable-monetized-api
        AttributeDefinitions:
          - AttributeName: customerId
            AttributeType: S
          - AttributeName: apiKey
            AttributeType: S
        KeySchema:
          - AttributeName: customerId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: ApiKey
            KeySchema:
              - AttributeName: apiKey
                KeyType: HASH
            Projection:
              ProjectionType: 'ALL'
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

custom:
  dynamodb:
    stages:
      - dev
    start:
      migrate: true

plugins:
  - serverless-dynamodb-local
  - serverless-offline
